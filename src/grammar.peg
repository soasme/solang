%prefix "soc"
%value "AstNode *"
%auxil "ParserState *"
%header {
#include "parser.h"
}
%source {
#define PCC_ERROR(auxil) ParserState_Raise((auxil), PARSER_ERR_UNKNOWN, Range_New(0, 0))
#define PCC_GETCHAR(auxil) ParserState_Read((auxil))
#define PCC_MALLOC(auxil, size) ParserState_Malloc((auxil), (size))
#define PCC_REALLOC(auxil, ptr, size) ParserState_Realloc((auxil), (ptr), (size))
#define PCC_FREE(auxil, ptr) ParserState_Free((auxil), (ptr))
}

int_lit <- bin_lit / oct_lit / hex_lit / dec_lit

# comment <- line_comment / block_comment
# line_comment <- SLASH2 (!NEWLINE .)* (NEWLINE / !.)
# block_comment <- SLASHASTERISK (!ASTERISKSLASH .)* ASTERISKSLASH

# NEWLINE <- '\n'
# ASTERISKSLASH <- "*/"
# SLASH2 <- "//"
# SLASHASTERISK <- "/*"
UNDERSCORE <- "_"
ZERO <- "0"
ZEROB <- "0b" / "0B"
ZEROO <- "0o" / "0O"
ZEROX <- "0x" / "0X"

bin_digit <- [0-1]
bin_digits <- bin_digit (UNDERSCORE? bin_digit)*
bin_lit <-
  ZEROB (
    UNDERSCORE? bin_digits
    / {
      printf("SYNERR_INVALID_BIN_LIT");
      exit(1);
    }
  )

oct_digit <- [0-7]
oct_digits <- oct_digit (UNDERSCORE? oct_digit)*
oct_lit <-
  ZEROO (
    UNDERSCORE? oct_digits
    / {
      printf("SYNERR_INVALID_OCT_LIT");
      exit(1);
    }
  )

hex_digit <- [0-9a-fA-F]
hex_digits <- hex_digit (UNDERSCORE? hex_digit)*
hex_lit <-
  ZEROX (
    UNDERSCORE? hex_digits
    / {
      ParserState_Raise((auxil), PARSER_ERR_NOTHEX, Range_New($0s, $0e));
    }
  )

dec_digit <- [0-9]
dec_digits <- dec_digit (UNDERSCORE? dec_digit)*
dec_lit <- ZERO / [1-9] (UNDERSCORE? dec_digits)?
